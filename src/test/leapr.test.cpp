#define CATCH_CONFIG_MAIN
#include "catch.hpp"
#include "leapr.cpp"


void checkSab( const std::vector<double>& correctSab, 
  const std::vector<std::vector<std::vector<double>>>& sab ){

  REQUIRE( sab.size()*sab[0].size()*sab[0][0].size() == correctSab.size() );

  int i = 0;
  for ( auto a1 : sab ){
    for ( auto a2 : a1 ){
      for ( auto a3 : a2 ){
        REQUIRE( a3 == Approx(correctSab[i]).epsilon(1e-6) );
        i += 1;
      }
    }
  }
}





TEST_CASE( "leapr" ){
  GIVEN( "water input" ) {
  int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
      lat, ni, nd, nka, mss;
  double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
  std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
    kappaVals;
  std::string title;

  nout         = 20;                                                 // Card 1
  title        = "title";                                            // Card 2
  ntempr       = 1;       iprint = 1;     nphon = 3;                 // Card 3
  mat          = 26;      za     = 126.0;                            // Card 4
  awr          = 8.93478; spr    = 6.15;  npr   = 1;   iel = 2;   ncold = 0;
  nss          = 0;       aws    = 0.0;                              // Card 6
  nalpha       = 5;       nbeta  = 5;     lat   = 3;                 // Card 7
  alpha        = { 0.10, 0.20, 0.40, 0.80, 1.60 };                   // Card 8
  beta         = { 0.10, 0.15, 0.30, 0.60, 1.20 };                   // Card 9
  temp_vec     = { 200.0 };                                          // Card 10 
  delta        = 3.8;     ni     = 6;                                // Card 11
  rho          = { 0.002, 0.004, 0.02, 0.04, 0.2, 0.4 };             // Card 12
  trans_weight = 0.3;     c      = 1.0;   tbeta = 20;                // Card 13
  nd           = 2;                                                  // Card 14
  oscEnergies  = { 1.0, 2.0 };                                       // Card 15
  oscWeights   = { 0.3, 0.4 };                                       // Card 16
  nka          = 4;       dka    = 0.01;                             // Card 17
  kappaVals    = { 0.1, 0.2, 0.4, 0.7 };                             // Card 18



  nout         = 24;                                                 // Card 1
  title        = "h in h20, shortened endf model";                   // Card 2
  ntempr       = 1;       iprint = 1;      nphon = 100;              // Card 3
  mat          = 101;     za     = 1001.0;                           // Card 4
  awr          = 0.99917; spr    = 20.449; npr   = 2;   iel = 0;   ncold = 0;
                                                                     // Card 5
  nss          = 1;       b7     = 1.;     aws   = 1.1; sps = 3.8883; mss = 1; 
                                                                     // Card 6
  nalpha       = 5;       nbeta  = 7;      lat   = 1;                // Card 7
  alpha        = { 0.01008, 0.015, 0.0252, 0.033, 0.050406 };        // Card 8
  beta         = { 0.00000, 0.006375, 0.012750, 0.025500, 0.038250, 0.05100, 0.065750 }; // Card 9
  temp_vec     = { 296.0 };                                          // Card 10 
  delta        = 0.00255;     ni     = 67;                           // Card 11
  rho          = { 0.00000, 0.00050, 0.00100, 0.00200, 0.00350, 0.00500, 
                   0.00750, 0.01000, 0.01300, 0.01650, 0.02000, 0.02450, 
                   0.02900, 0.03400, 0.03950, 0.04500, 0.05060, 0.05620, 
                   0.06220, 0.06860, 0.07500, 0.08300, 0.09100, 0.09900, 
                   0.10700, 0.11500, 0.11970, 0.12140, 0.12180, 0.11950, 
                   0.11250, 0.10650, 0.10050, 0.09542, 0.09126, 0.08710, 
                   0.08390, 0.08070, 0.07798, 0.07574, 0.07350, 0.07162, 
                   0.06974, 0.06804, 0.06652, 0.06500, 0.06340, 0.06180, 
                   0.06022, 0.05866, 0.05710, 0.05586, 0.05462, 0.05350, 
                   0.05250, 0.05150, 0.05042, 0.04934, 0.04822, 0.04706, 
                   0.04590, 0.04478, 0.04366, 0.04288, 0.04244, 0.04200, 0. };
                                                                     // Card 12
  trans_weight = 0.055556;     c      = 0.0;    tbeta = 0.444444;    // Card 13
  nd           = 2;                                                  // Card 14
  //oscEnergies  = { 205.0,    0.48};                                  // Card 15
  oscEnergies  = { 35.8,    0.48};                                  // Card 15
  oscWeights   = { 0.166667, 0.333333 };                             // Card 16
  nka          = 4;       dka    = 0.01;                             // Card 17
  kappaVals    = { 0.1, 0.2, 0.4, 0.7 };                             // Card 18

 
  auto ssm = leapr( nout, title, ntempr, iprint, nphon, mat, za, awr, 
      spr, npr, iel, ncold, nss, aws, nalpha, nbeta, lat, alpha, beta, 
      temp_vec, delta, ni, rho, trans_weight, c, tbeta, nd, oscEnergies, 
      oscWeights, nka, dka, kappaVals );
  std::vector<double> ssmCorrect { 11.9380466,  11.7358569,  11.1552444,  
    9.04435365,  6.36253466,  3.86288069,  1.81640727,  9.77386851,  
    9.67827226,  9.35649187,  8.13748192,  6.42985286,  4.61578595,  
    2.78373847,  7.52086114,  7.48096532,  7.33830900,  6.77191769,  
    5.91039840,  4.85809341,  3.60668537,  6.55904026,  6.53116851,  
    6.44104253,  6.08124304,  5.47109680,  4.72905752,  3.76787280,
    5.28338485,  5.26835188,  5.23245837,  5.03910024,  4.71891225,  
    4.29716228,  3.7169103340 };



  checkSab( ssmCorrect, ssm );



    THEN( "results" ){
      REQUIRE( true );
    } // THEN
  } // GIVEN 
  GIVEN( "graphite input" ){
    int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
        lat, ni, nd, nka, mss;
    double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
    std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
      kappaVals;
    std::string title;




    nout         = 20;                                               // Card 1
    title        = "GRAPHITE, ENDF MODEL (EXTENDED) ";               // Card 2
    ntempr       = 10;       iprint = 1;      nphon = 100;           // Card 3
    mat          = 31;       za     = 131.0;                         // Card 4
    awr          = 11.898;   spr    = 4.7392; npr   = 1;   iel = 1;   ncold = 0;
                                                                     // Card 5
    nss          = 0;       b7     = 0;     aws   = 0; sps = 0; mss = 0; 
                                                                     // Card 6
    nalpha       = 72;       nbeta  = 96;      lat   = 1;              // Card 7
    alpha = { 0.010080,  0.01500 ,  0.0252000,  0.03300,   0.050400,   
              0.075600,  0.100800,  0.150000,   2.5203E-1, 0.33000,  
              5.0406e-1, 7.5609e-1, 1.008120,   1.260150,  1.512180,   
              1.76421,   2.016240,  2.273310,   2.535520,  2.802970,  
              3.075770,  3.35401,   3.637900,   3.927330,  4.222710,  
              4.523830,  4.831110,  5.14443,    5.464110,  5.790130, 
              6.122610,  6.461850,  6.807830,   7.16077,   7.520670,   
              7.887830,  8.262340,  8.644320,   9.033960,  9.43136,   
              9.836730,  1.02506e1, 1.06719e1,  1.11024e1, 1.154090e1, 
              1.19886E1, 1.24452e1, 1.291100e1, 1.338580e1, 14, 15, 16, 
              17, 18, 19, 20, 22, 24, 26, 28, 30, 32.5, 35, 37.5, 40, 
              42.5, 45, 47.5, 50, 52.5, 55, 60 }; // Card, 8
 beta = { 0.000000, 0.100812, 0.201624, 0.302436, 
          0.403248, 0.504060, 0.604872, 0.705684, 0.806496, 
          0.907307, 1.00812, 1.108930, 1.209740, 1.310550, 1.411370, 
          1.51218, 1.612990, 1.713800, 1.814610, 1.915430, 2.016240, 
          2.11705, 2.217860, 2.318670, 2.419490, 2.520300, 2.621110, 
          2.72192, 2.822730, 2.923540, 3.024360, 3.125170, 3.225980,
          3.32679, 3.427600, 3.528420, 3.629230, 3.730040, 3.830850, 
          3.93167, 4.032480, 4.133290, 4.243780, 4.364850, 4.497620, 
          4.64309, 4.802480, 4.977190, 5.168730, 5.378620, 5.608670, 
          5.73473, 5.860800, 5.998960, 6.137130, 6.288550, 6.439970, 
          6.60591, 6.771840, 6.953760, 7.135670, 7.335020, 7.534380, 
          7.75289, 7.971400, 8.210880, 8.450360, 8.975290, 9.550520, 
          10.1810, 10.8726, 11.6297, 12.4593, 13.3697, 14.3667, 15.4595, 
          16.6571, 17.9697, 19.4093, 20.9860, 22.7139, 24.6082, 26.6849, 
          28.9602, 31.4533, 34.1873, 37.1825, 40.4659, 45, 50, 55, 60, 65, 70, 
          75, 80  }; // Card 9
    temp_vec     = { 296.0 };                                        // Card 10 
    delta        = 0.00255;     ni     = 67;                         // Card 11
    rho          = { 0.00000, 0.00050, 0.00100, 0.00200, 0.00350, 0.00500, 
                     0.00750, 0.01000, 0.01300, 0.01650, 0.02000, 0.02450, 
                     0.02900, 0.03400, 0.03950, 0.04500, 0.05060, 0.05620, 
                     0.06220, 0.06860, 0.07500, 0.08300, 0.09100, 0.09900, 
                     0.10700, 0.11500, 0.11970, 0.12140, 0.12180, 0.11950, 
                     0.11250, 0.10650, 0.10050, 0.09542, 0.09126, 0.08710, 
                     0.08390, 0.08070, 0.07798, 0.07574, 0.07350, 0.07162, 
                     0.06974, 0.06804, 0.06652, 0.06500, 0.06340, 0.06180, 
                     0.06022, 0.05866, 0.05710, 0.05586, 0.05462, 0.05350, 
                     0.05250, 0.05150, 0.05042, 0.04934, 0.04822, 0.04706, 
                     0.04590, 0.04478, 0.04366, 0.04288, 0.04244, 0.04200, 0. };
                                                                     // Card 12
    trans_weight = 0.055556;     c      = 0.0;    tbeta = 0.444444;  // Card 13
    nd           = 2;                                                // Card 14
    //oscEnergies  = { 205.0,    0.48};                              // Card 15
    oscEnergies  = { 35.8,    0.48};                                 // Card 15
    oscWeights   = { 0.166667, 0.333333 };                           // Card 16
    nka          = 4;       dka    = 0.01;                           // Card 17
    kappaVals    = { 0.1, 0.2, 0.4, 0.7 };                           // Card 18




    std::vector<double> ssmCorrect { 0.189753E-02, 0.199576E-02, 0.209399E-02, 
      0.221587E-02, 0.234194E-02, 0.241997E-02, 0.247731E-02, 0.228906E-02, 
      0.189860E-02, 0.157984E-02, 0.136957E-02, 0.118065E-02, 0.105668E-02, 
      0.938891E-03, 0.878816E-03, 0.818746E-03, 0.776936E-03, 0.736161E-03, 
      0.733310E-03, 0.740193E-03, 0.814278E-03, 0.925300E-03, 0.915797E-03, 
      0.783211E-03, 0.663791E-03, 0.569485E-03, 0.488100E-03, 0.460499E-03, 
      0.435712E-03, 0.473315E-03, 0.510921E-03, 0.459161E-03, 0.396657E-03, 
      0.362124E-03, 0.337310E-03, 0.314245E-03, 0.292393E-03, 0.290292E-03, 
      0.313220E-03, 0.332288E-03, 0.341925E-03, 0.356657E-03, 0.407082E-03, 
      0.429622E-03, 0.339828E-03, 0.298556E-03, 0.289412E-03, 0.270417E-03, 
      0.264804E-03, 0.325671E-03, 0.176347E-03, 0.172707E-03, 0.198404E-03, 
      0.208465E-03, 0.200897E-03, 0.171850E-03, 0.132499E-03, 0.145010E-03, 
      0.249993E-03, 0.467271E-03, 0.278984E-03, 0.233567E-03, 0.195733E-03, 
      0.170835E-03, 0.166179E-03, 0.341319E-04, 0.106011E-05, 0.525807E-06, 
      0.383740E-06, 0.286798E-06, 0.196718E-06, 0.151687E-06, 0.110447E-06, 
      0.655476E-07, 0.476442E-07, 0.141098E-07, 0.121551E-09, 0.560642E-10, 
      0.266458E-10, 0.100644E-10, 0.216661E-11, 0.140957E-13, 0.375906E-14, 
      0.680983E-15, 0.114053E-16, 0.342559E-18, 0.210903E-19, 0.645103E-22, 
      0.735154E-24, 0.664497E-27, 0.000000E+00, 0.000000E+00, 0.000000E+00, 
      0.000000E+00, 0.000000E+00, 0.000000E+00, 0.281685E-02, 0.296264E-02, 
      0.310842E-02, 0.328926E-02 };
  } // GIVEN

} // TEST CASE

