#define CATCH_CONFIG_MAIN
#include "catch.hpp"
#include "leapr.cpp"


void checkSab( const std::vector<double>& correctSab, 
  const std::vector<std::vector<std::vector<double>>>& sab ){

  int i = 0;
  for ( auto a1 : sab ){
    for ( auto a2 : a1 ){
      for ( auto a3 : a2 ){
        if ( i == int(correctSab.size()) ){ return; }
        REQUIRE( a3 == Approx(correctSab[i]).epsilon(1e-6) );
        i += 1;
      }
    }
  }
}





TEST_CASE( "leapr" ){
  /*
  GIVEN( "generic input" ) {
  int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
      lat, ni, nd, nka, mss;
  double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
  std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
    kappaVals;
  std::string title;

  nout         = 20;                                                 // Card 1
  title        = "title";                                            // Card 2
  ntempr       = 1;       iprint = 1;     nphon = 3;                 // Card 3
  mat          = 26;      za     = 126.0;                            // Card 4
  awr          = 8.93478; spr    = 6.15;  npr   = 1;   iel = 2;   ncold = 0;
  nss          = 0;       aws    = 0.0;                              // Card 6
  nalpha       = 5;       nbeta  = 5;     lat   = 3;                 // Card 7
  alpha        = { 0.10, 0.20, 0.40, 0.80, 1.60 };                   // Card 8
  beta         = { 0.10, 0.15, 0.30, 0.60, 1.20 };                   // Card 9
  temp_vec     = { 200.0 };                                          // Card 10 
  delta        = 3.8;     ni     = 6;                                // Card 11
  rho          = { 0.002, 0.004, 0.02, 0.04, 0.2, 0.4 };             // Card 12
  trans_weight = 0.3;     c      = 1.0;   tbeta = 20;                // Card 13
  nd           = 2;                                                  // Card 14
  oscEnergies  = { 1.0, 2.0 };                                       // Card 15
  oscWeights   = { 0.3, 0.4 };                                       // Card 16
  nka          = 4;       dka    = 0.01;                             // Card 17
  kappaVals    = { 0.1, 0.2, 0.4, 0.7 };                             // Card 18



  nout         = 24;                                                 // Card 1
  title        = "h in h20, shortened endf model";                   // Card 2
  ntempr       = 1;       iprint = 1;      nphon = 100;              // Card 3
  mat          = 101;     za     = 1001.0;                           // Card 4
  awr          = 0.99917; spr    = 20.449; npr   = 2;   iel = 0;   ncold = 0;
                                                                     // Card 5
  nss          = 1;       b7     = 1.;     aws   = 1.1; sps = 3.8883; mss = 1; 
                                                                     // Card 6
  nalpha       = 5;       nbeta  = 7;      lat   = 1;                // Card 7
  alpha        = { 0.01008, 0.015, 0.0252, 0.033, 0.050406 };        // Card 8
  beta         = { 0.00000, 0.006375, 0.012750, 0.025500, 0.038250, 0.05100, 0.065750 }; // Card 9
  temp_vec     = { 296.0 };                                          // Card 10 
  delta        = 0.00255;     ni     = 67;                           // Card 11
  rho          = { 0.00000, 0.00050, 0.00100, 0.00200, 0.00350, 0.00500, 
                   0.00750, 0.01000, 0.01300, 0.01650, 0.02000, 0.02450, 
                   0.02900, 0.03400, 0.03950, 0.04500, 0.05060, 0.05620, 
                   0.06220, 0.06860, 0.07500, 0.08300, 0.09100, 0.09900, 
                   0.10700, 0.11500, 0.11970, 0.12140, 0.12180, 0.11950, 
                   0.11250, 0.10650, 0.10050, 0.09542, 0.09126, 0.08710, 
                   0.08390, 0.08070, 0.07798, 0.07574, 0.07350, 0.07162, 
                   0.06974, 0.06804, 0.06652, 0.06500, 0.06340, 0.06180, 
                   0.06022, 0.05866, 0.05710, 0.05586, 0.05462, 0.05350, 
                   0.05250, 0.05150, 0.05042, 0.04934, 0.04822, 0.04706, 
                   0.04590, 0.04478, 0.04366, 0.04288, 0.04244, 0.04200, 0. };
                                                                     // Card 12
  trans_weight = 0.055556;     c      = 0.0;    tbeta = 0.444444;    // Card 13
  nd           = 2;                                                  // Card 14
  //oscEnergies  = { 205.0,    0.48};                                  // Card 15
  oscEnergies  = { 35.8,    0.48};                                  // Card 15
  oscWeights   = { 0.166667, 0.333333 };                             // Card 16
  nka          = 4;       dka    = 0.01;                             // Card 17
  kappaVals    = { 0.1, 0.2, 0.4, 0.7 };                             // Card 18

 
  auto ssm = leapr( nout, title, ntempr, iprint, nphon, mat, za, awr, 
      spr, npr, iel, ncold, nss, aws, nalpha, nbeta, lat, alpha, beta, 
      temp_vec, delta, ni, rho, trans_weight, c, tbeta, nd, oscEnergies, 
      oscWeights, nka, dka, kappaVals );
  std::vector<double> ssmCorrect { 11.9380466,  11.7358569,  11.1552444,  
    9.04435365,  6.36253466,  3.86288069,  1.81640727,  9.77386851,  
    9.67827226,  9.35649187,  8.13748192,  6.42985286,  4.61578595,  
    2.78373847,  7.52086114,  7.48096532,  7.33830900,  6.77191769,  
    5.91039840,  4.85809341,  3.60668537,  6.55904026,  6.53116851,  
    6.44104253,  6.08124304,  5.47109680,  4.72905752,  3.76787280,
    5.28338485,  5.26835188,  5.23245837,  5.03910024,  4.71891225,  
    4.29716228,  3.7169103340 };



  checkSab( ssmCorrect, ssm );



    THEN( "results" ){
      REQUIRE( true );
    } // THEN
  } // GIVEN 
*/
  GIVEN( "H in H2O input" ) {
  int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
      lat, ni, nd, nka, mss;
  double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
  std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
    kappaVals;
  std::string title;

  nout         = 20;                                                 // Card 1
  title        = "H IN H2O, ENDF MODEL";                             // Card 2
  ntempr       = 1;       iprint = 1;     nphon = 100;                 // Card 3
  mat          = 1;       za     = 1001.0;                            // Card 4
  awr          = 0.99917; spr    = 20.478;  npr   = 2;  iel = 0;   ncold = 0;
  nss          = 1;       b7    = 1.0;   aws = 15.85316;   sps = 3.8883; // Card 6
  nalpha       = 97;      nbeta  = 95;    lat   = 1;                 // Card 7
  alpha        = { 0.01008, 0.015, 0.0252, 0.033, 0.050406, 0.0756, 
                   0.100812, 0.151218, 0.201624, 0.252030, 0.302436, 
                   0.352842, 0.403248, 0.453654, 0.504060, 0.554466, 
                   0.609711, 0.670259, 0.736623, 0.809349, 0.889061, 
                   0.976435, 1.072130, 1.177080, 1.292110, 1.418220, 
                   1.556330, 1.707750, 1.873790, 2.055660, 2.255060, 
                   2.473520, 2.712950, 2.975460, 3.263080, 3.578320, 
                   3.923900, 4.302660, 4.717700, 5.172560, 5.671180, 
                   6.217580, 6.816500, 7.472890, 8.192280, 8.980730, 
                   9.844890, 10.79190, 11.83030, 12.96740, 14.21450, 
                   15.58150, 17.07960, 18.72080, 20.52030, 22.49220, 
                   24.65260, 27.02160, 29.61750, 32.46250, 35.58160, 
                   38.99910, 42.74530, 46.85030, 51.34960, 56.28130, 
                   61.68680, 64.6, 67.61050, 70.8, 74.10280, 77.6, 
                   81.21920, 85.1, 89.01800, 93.3, 97.56480, 102.2, 
                   106.9310, 112, 117.2040, 122.8, 128.4550, 134.6, 
                   140.7840, 147.4, 154.3030, 161.7, 169.1220, 177.2, 
                   185.3530, 203.1560, 222.6530, 244.0360, 267.4640, 
                   293.1410, 321.2880 };                   // Card 8
  beta         = { 0.000000, 0.006375, 0.012750, 0.025500, 0.038250, 
                   0.051000, 0.065750, 0.0806495, 0.120974, 0.161299, 
                   0.241949, 0.322598, 0.403248, 0.483897, 0.564547, 
                   0.645197, 0.725846, 0.806496, 0.887145, 0.967795, 
                   1.048440, 1.129090, 1.209740, 1.290390, 1.371040, 
                   1.451690, 1.532340, 1.612990, 1.693640, 1.774290, 
                   1.854940, 1.935590, 2.016240, 2.096890, 2.177540, 
                   2.258190, 2.338840, 2.419490, 2.500140, 2.580790, 
                   2.669500, 2.767090, 2.874450, 2.992500, 3.122350, 
                   3.265300, 3.422470, 3.595360, 3.785490, 3.994670, 
                   4.224730, 4.477870, 4.756310, 5.062580, 5.399390, 
                   5.769970, 6.177660, 6.626070, 7.119240, 7.661810, 
                   8.258620, 8.915110, 9.637220, 10.43200, 11.30510, 
                   12.26680, 13.32430, 14.48670, 15.76600, 17.17330, 
                   18.72180, 20.42450, 22.29760, 24.35720, 26.62340, 
                   29.11650, 31.85860, 34.87590, 38.19360, 41.84400, 
                   45.85830, 50.27490, 55.13310, 60.47710, 66.35540, 
                   72.82150, 79.93380, 90.00000, 100.0000, 110.0000, 
                   120.0000, 130.0000, 140.0000, 150.0000, 160.0000 }; // Card 9
  temp_vec     = { 296.0 };                                          // Card 10 
  delta        = 0.00255;     ni     = 67;                            // Card 11
  rho          = { 0, 0.0005, 0.001, 0.002, 0.0035, 0.005, 0.0075, 0.01, 
                   0.013, 0.0165, 0.02, 0.0245, 0.029, 0.034, 0.0395, 0.045, 
                   0.0506, 0.0562, 0.0622, 0.0686, 0.075, 0.083, 0.091, 
                   0.099, 0.107, 0.115, 0.1197, 0.1214, 0.1218, 0.1195, 
                   0.1125, 0.1065, 0.1005, 0.09542, 0.09126, 0.0871, 0.0839, 
                   0.0807, 0.07798, 0.07574, 0.0735, 0.07162, 0.06974,
                   0.06804, 0.06652, 0.065, 0.0634, 0.0618, 0.06022, 0.05866, 
                   0.0571, 0.05586, 0.05462, 0.0535, 0.0525, 0.0515, 0.05042, 
                   0.04934, 0.04822, 0.04706, 0.0459, 0.04478, 0.04366, 
                   0.04288, 0.04244, 0.042, 0.0 };             // Card 12
  trans_weight = 0.055556;     c      = 0.0;   tbeta = 0.444444;     // Card 13
  nd           = 2;                                                  // Card 14
  oscEnergies  = { 0.205, 0.48 };                                    // Card 15
  oscWeights   = { 0.166667, 0.333333 };                             // Card 16
  nka          = 0;       dka    = 0.0;                             // Card 17
  kappaVals    = { };                             // Card 18

  auto ssm = leapr( nout, title, ntempr, iprint, nphon, mat, za, awr, 
      spr, npr, iel, ncold, nss, aws, nalpha, nbeta, lat, alpha, beta, 
      temp_vec, delta, ni, rho, trans_weight, c, tbeta, nd, oscEnergies, 
      oscWeights, nka, dka, kappaVals );

  std::vector<double> ssmCorrect { 0.119356142e2, 0.117334667e2, 
    0.111529773e2,  0.904255723e1,   0.636134291e1, 0.386225471e1, 
    0.181630359e1,  0.697623746,    0.199068662e-1, 0.569440243e-3, 
    0.323354841e-3, 0.298221350e-3, 0.299636508e-3, 0.296107320e-3, 
    0.305358546e-3, 0.317758356e-3, 0.326530893e-3, 0.336691180e-3, 
    0.348223478e-3, 0.357718815e-3, 0.369090083e-3, 0.382591059e-3, 
    0.394398171e-3, 0.406759025e-3, 0.419774567e-3, 0.431823920e-3, 
    0.442245818e-3, 0.451355517e-3, 0.459290279e-3, 0.467651065e-3, 
    0.476698427e-3, 0.485834717e-3, 0.495460725e-3, 0.509308056e-3, 
    0.523250483e-3, 0.536046544e-3, 0.547826154e-3, 0.558668540e-3, 
    0.567071035e-3, 0.567084677e-3, 0.557415136e-3, 0.538837584e-3, 
    0.509977877e-3, 0.464215388e-3, 0.411625532e-3, 0.361822880e-3, 
    0.318357294e-3, 0.280133529e-3, 0.246821936e-3, 0.218470623e-3, 
    0.193489674e-3, 0.171402084e-3, 0.150253931e-3, 0.130243202e-3, 
    0.113510906e-3, 0.982754621e-4, 0.802454259e-4, 0.182914420e-4, 
    0.249039250e-6, 0.193616416e-6, 0.306535223e-6, 0.147774909e-6, 
    0.134201772e-6, 0.134933726e-6, 0.894699751e-7, 0.447002647e-7, 
    0.254040302e-7, 0.878879377e-8, 0.284829773e-8, 0.140098636e-7, 
    0.442991464e-7, 0.764914462e-7, 0.610267227e-7, 0.202222965e-7, 
    0.344001368e-10, 0.232418891e-10, 0.547995627e-11, 0.568984337e-14, 
    0.436851316e-15, 0.245368997e-18, 0.000000000, 0.000000000, 
    0.000000000, 0.000000000, 0.000000000, 0.000000000, 
    0.000000000, 0.000000000, 0.000000000, 0.000000000, 
    0.000000000, 0.000000000, 0.000000000, 0.000000000, 
    0.000000000, 0.977095038e1, 0.967539510e1, 0.935371327e1, 
    0.813515003e1, 0.642810949e1, 0.461467841e1 };
   
  checkSab( ssmCorrect, ssm );


 
  } // GIVEN 


/*

  GIVEN( "graphite input" ){
    WHEN( "1 temperature is requested" ){
    int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
        lat, ni, nd, nka, mss;
    double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
    std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
      kappaVals;
    std::string title;




    nout         = 20;                                               // Card 1
    title        = "GRAPHITE, ENDF MODEL (EXTENDED) ";               // Card 2
    ntempr       = 1;        iprint = 1;      nphon = 100;           // Card 3
    mat          = 31;       za     = 131.0;                         // Card 4
    awr          = 11.898;   spr    = 4.7392; npr   = 1;   iel = 1;   ncold = 0;
                                                                     // Card 5
    nss          = 0;       b7     = 0;     aws   = 0; sps = 0; mss = 0; 
                                                                     // Card 6
    nalpha       = 72;       nbeta  = 96;      lat   = 1;              // Card 7
    alpha = { 0.010080,  0.01500 ,  0.0252000,  0.03300,   0.050400,   
              0.075600,  0.100800,  0.150000,   2.5203E-1, 0.33000,  
              5.0406e-1, 7.5609e-1, 1.008120,   1.260150,  1.512180,   
              1.76421,   2.016240,  2.273310,   2.535520,  2.802970,  
              3.075770,  3.35401,   3.637900,   3.927330,  4.222710,  
              4.523830,  4.831110,  5.14443,    5.464110,  5.790130, 
              6.122610,  6.461850,  6.807830,   7.16077,   7.520670,   
              7.887830,  8.262340,  8.644320,   9.033960,  9.43136,   
              9.836730,  1.02506e1, 1.06719e1,  1.11024e1, 1.154090e1, 
              1.19886E1, 1.24452e1, 1.291100e1, 1.338580e1, 14, 15, 16, 
              17, 18, 19, 20, 22, 24, 26, 28, 30, 32.5, 35, 37.5, 40, 
              42.5, 45, 47.5, 50, 52.5, 55, 60 }; // Card, 8
 beta = { 0.000000, 0.100812, 0.201624, 0.302436, 
          0.403248, 0.504060, 0.604872, 0.705684, 0.806496, 
          0.907307, 1.00812, 1.108930, 1.209740, 1.310550, 1.411370, 
          1.51218, 1.612990, 1.713800, 1.814610, 1.915430, 2.016240, 
          2.11705, 2.217860, 2.318670, 2.419490, 2.520300, 2.621110, 
          2.72192, 2.822730, 2.923540, 3.024360, 3.125170, 3.225980,
          3.32679, 3.427600, 3.528420, 3.629230, 3.730040, 3.830850, 
          3.93167, 4.032480, 4.133290, 4.243780, 4.364850, 4.497620, 
          4.64309, 4.802480, 4.977190, 5.168730, 5.378620, 5.608670, 
          5.73473, 5.860800, 5.998960, 6.137130, 6.288550, 6.439970, 
          6.60591, 6.771840, 6.953760, 7.135670, 7.335020, 7.534380, 
          7.75289, 7.971400, 8.210880, 8.450360, 8.975290, 9.550520, 
          10.1810, 10.8726, 11.6297, 12.4593, 13.3697, 14.3667, 15.4595, 
          16.6571, 17.9697, 19.4093, 20.9860, 22.7139, 24.6082, 26.6849, 
          28.9602, 31.4533, 34.1873, 37.1825, 40.4659, 45, 50, 55, 60, 65, 70, 
          75, 80  }; // Card 9
    temp_vec     = { 296.0 }; // Card 10 
    delta        = 0.005485;     ni     = 40;                         // Card 11
    rho          = { 0, 0.346613, 1.4135, 3.03321, 3.25901, 3.38468, 3.48269,
                     3.76397, 4.05025, 4.84696, 7.35744, 5.88224, 4.63255,
                     4.48287, 5.80642, 4.63802, 4.28503, 3.92079, 4.91352,
                     5.53836, 7.51076, 5.31651, 5.40525, 5.20376, 5.3276,
                     7.17251, 3.31813, 4.50126, 5.04663, 4.2089, 2.91985,
                     4.65109, 13.1324, 7.25016, 6.5662, 5.47181, 5.06137,
                     5.19813, 0.457086, 0 };
                                                                     // Card 12
    trans_weight = 0.0;     c      = 0.0;    tbeta = 1.0;  // Card 13
    nd           = 2;                                                // Card 14
    //oscEnergies  = { 205.0,    0.48};                              // Card 15
    oscEnergies  = { };                                 // Card 15
    oscWeights   = {  };                           // Card 16
    nka          = 0;       dka    = 0.01;                           // Card 17
    kappaVals    = { 0 };                           // Card 18


    std::vector<double> ssmCorrect { 0.189753E-2, 0.199576E-2, 0.209399E-2, 
      0.221587E-2, 0.234194E-2, 0.241997E-2, 0.247731E-2, 0.228906E-2, 
      0.189860E-2, 0.157984E-2, 0.136957E-2, 0.118065E-2, 0.105668E-2, 
      0.938891E-3, 0.878816E-3, 0.818746E-3, 0.776936E-3, 0.736161E-3, 
      0.733310E-3, 0.740193E-3, 0.814278E-3, 0.925300E-3, 0.915797E-3, 
      0.783211E-3, 0.663791E-3, 0.569485E-3, 0.488100E-3, 0.460499E-3, 
      0.435712E-3, 0.473315E-3, 0.510921E-3, 0.459161E-3, 0.396657E-3, 
      0.362124E-3, 0.337310E-3, 0.314245E-3, 0.292393E-3, 0.290292E-3, 
      0.313220E-3, 0.332288E-3, 0.341925E-3, 0.356657E-3, 0.407082E-3, 
      0.429622E-3, 0.339828E-3, 0.298556E-3, 0.289412E-3, 0.270417E-3, 
      0.264804E-3, 0.325671E-3, 0.176347E-3, 0.172707E-3, 0.198404E-3, 
      0.208465E-3, 0.200897E-3, 0.171850E-3, 0.132499E-3, 0.145010E-3, 
      0.249993E-3, 0.467271E-3, 0.278984E-3, 0.233567E-3, 0.195733E-3, 
      0.170835E-3, 0.166179E-3, 0.341319E-4, 0.106011E-5, 0.525807E-6, 
      0.383740E-6, 0.286798E-6, 0.196718E-6, 0.151687E-6, 0.110447E-6, 
      0.655476E-7, 0.476442E-7, 0.141098E-7, 0.121551E-9, 0.560642E-10, 
      0.266458E-10, 0.100644E-10, 0.216661E-11, 0.140957E-13, 0.375906E-14, 
      0.680983E-15, 0.114053E-16, 0.342559E-18, 0.210903E-19, 0.645103E-22, 
      0.735154E-24, 0.664497E-27, 0.000000E+00, 0.000000E+00, 0.000000E+00, 
      0.000000E+00, 0.000000E+00, 0.000000E+00, 0.281685E-2, 0.296264E-2, 
      0.310842E-2, 0.328926E-2 };
 
  auto ssm = leapr( nout, title, ntempr, iprint, nphon, mat, za, awr, 
      spr, npr, iel, ncold, nss, aws, nalpha, nbeta, lat, alpha, beta, 
      temp_vec, delta, ni, rho, trans_weight, c, tbeta, nd, oscEnergies, 
      oscWeights, nka, dka, kappaVals );
  checkSab( ssmCorrect, ssm );

    } // WHEN

    WHEN( "multiple temperatures are requested" ){
    int nout, ntempr, iprint, nphon, mat, npr, iel, ncold, nss, nalpha, nbeta, 
        lat, ni, nd, nka, mss;
    double za, awr, spr, aws, sps, delta, trans_weight, c, tbeta, dka, b7;
    std::vector<double> alpha, beta, temp_vec, rho, oscEnergies, oscWeights, 
      kappaVals;
    std::string title;




    nout         = 20;                                               // Card 1
    title        = "GRAPHITE, ENDF MODEL (EXTENDED) ";               // Card 2
    ntempr       = 10;       iprint = 1;      nphon = 100;           // Card 3
    mat          = 31;       za     = 131.0;                         // Card 4
    awr          = 11.898;   spr    = 4.7392; npr   = 1;   iel = 1;   ncold = 0;
                                                                     // Card 5
    nss          = 0;       b7     = 0;     aws   = 0; sps = 0; mss = 0; 
                                                                     // Card 6
    nalpha       = 72;       nbeta  = 96;      lat   = 1;              // Card 7
    alpha = { 0.010080,  0.01500 ,  0.0252000,  0.03300,   0.050400,   
              0.075600,  0.100800,  0.150000,   2.5203E-1, 0.33000,  
              5.0406e-1, 7.5609e-1, 1.008120,   1.260150,  1.512180,   
              1.76421,   2.016240,  2.273310,   2.535520,  2.802970,  
              3.075770,  3.35401,   3.637900,   3.927330,  4.222710,  
              4.523830,  4.831110,  5.14443,    5.464110,  5.790130, 
              6.122610,  6.461850,  6.807830,   7.16077,   7.520670,   
              7.887830,  8.262340,  8.644320,   9.033960,  9.43136,   
              9.836730,  1.02506e1, 1.06719e1,  1.11024e1, 1.154090e1, 
              1.19886E1, 1.24452e1, 1.291100e1, 1.338580e1, 14, 15, 16, 
              17, 18, 19, 20, 22, 24, 26, 28, 30, 32.5, 35, 37.5, 40, 
              42.5, 45, 47.5, 50, 52.5, 55, 60 }; // Card, 8
 beta = { 0.000000, 0.100812, 0.201624, 0.302436, 
          0.403248, 0.504060, 0.604872, 0.705684, 0.806496, 
          0.907307, 1.00812, 1.108930, 1.209740, 1.310550, 1.411370, 
          1.51218, 1.612990, 1.713800, 1.814610, 1.915430, 2.016240, 
          2.11705, 2.217860, 2.318670, 2.419490, 2.520300, 2.621110, 
          2.72192, 2.822730, 2.923540, 3.024360, 3.125170, 3.225980,
          3.32679, 3.427600, 3.528420, 3.629230, 3.730040, 3.830850, 
          3.93167, 4.032480, 4.133290, 4.243780, 4.364850, 4.497620, 
          4.64309, 4.802480, 4.977190, 5.168730, 5.378620, 5.608670, 
          5.73473, 5.860800, 5.998960, 6.137130, 6.288550, 6.439970, 
          6.60591, 6.771840, 6.953760, 7.135670, 7.335020, 7.534380, 
          7.75289, 7.971400, 8.210880, 8.450360, 8.975290, 9.550520, 
          10.1810, 10.8726, 11.6297, 12.4593, 13.3697, 14.3667, 15.4595, 
          16.6571, 17.9697, 19.4093, 20.9860, 22.7139, 24.6082, 26.6849, 
          28.9602, 31.4533, 34.1873, 37.1825, 40.4659, 45, 50, 55, 60, 65, 70, 
          75, 80  }; // Card 9
    temp_vec     = { 296.0, 400, 500, 600, 700, 800, 1200, 1600, 2000 }; // Card 10 
    delta        = 0.005485;     ni     = 40;                         // Card 11
    rho          = { 0, 0.346613, 1.4135, 3.03321, 3.25901, 3.38468, 3.48269,
                     3.76397, 4.05025, 4.84696, 7.35744, 5.88224, 4.63255,
                     4.48287, 5.80642, 4.63802, 4.28503, 3.92079, 4.91352,
                     5.53836, 7.51076, 5.31651, 5.40525, 5.20376, 5.3276,
                     7.17251, 3.31813, 4.50126, 5.04663, 4.2089, 2.91985,
                     4.65109, 13.1324, 7.25016, 6.5662, 5.47181, 5.06137,
                     5.19813, 0.457086, 0 };
                                                                     // Card 12
    trans_weight = 0.0;     c      = 0.0;    tbeta = 1.0;  // Card 13
    nd           = 2;                                                // Card 14
    //oscEnergies  = { 205.0,    0.48};                              // Card 15
    oscEnergies  = { };                                 // Card 15
    oscWeights   = {  };                           // Card 16
    nka          = 0;       dka    = 0.01;                           // Card 17
    kappaVals    = { 0 };                           // Card 18




    std::vector<double> ssmCorrect { 0.189753E-2, 0.199576E-2, 0.209399E-2, 
      0.221587E-2, 0.234194E-2, 0.241997E-2, 0.247731E-2, 0.228906E-2, 
      0.189860E-2, 0.157984E-2, 0.136957E-2, 0.118065E-2, 0.105668E-2, 
      0.938891E-3, 0.878816E-3, 0.818746E-3, 0.776936E-3, 0.736161E-3, 
      0.733310E-3, 0.740193E-3, 0.814278E-3, 0.925300E-3, 0.915797E-3, 
      0.783211E-3, 0.663791E-3, 0.569485E-3, 0.488100E-3, 0.460499E-3, 
      0.435712E-3, 0.473315E-3, 0.510921E-3, 0.459161E-3, 0.396657E-3, 
      0.362124E-3, 0.337310E-3, 0.314245E-3, 0.292393E-3, 0.290292E-3, 
      0.313220E-3, 0.332288E-3, 0.341925E-3, 0.356657E-3, 0.407082E-3, 
      0.429622E-3, 0.339828E-3, 0.298556E-3, 0.289412E-3, 0.270417E-3, 
      0.264804E-3, 0.325671E-3, 0.176347E-3, 0.172707E-3, 0.198404E-3, 
      0.208465E-3, 0.200897E-3, 0.171850E-3, 0.132499E-3, 0.145010E-3, 
      0.249993E-3, 0.467271E-3, 0.278984E-3, 0.233567E-3, 0.195733E-3, 
      0.170835E-3, 0.166179E-3, 0.341319E-4, 0.106011E-5, 0.525807E-6, 
      0.383740E-6, 0.286798E-6, 0.196718E-6, 0.151687E-6, 0.110447E-6, 
      0.655476E-7, 0.476442E-7, 0.141098E-7, 0.121551E-9, 0.560642E-10, 
      0.266458E-10, 0.100644E-10, 0.216661E-11, 0.140957E-13, 0.375906E-14, 
      0.680983E-15, 0.114053E-16, 0.342559E-18, 0.210903E-19, 0.645103E-22, 
      0.735154E-24, 0.664497E-27, 0.000000E+00, 0.000000E+00, 0.000000E+00, 
      0.000000E+00, 0.000000E+00, 0.000000E+00, 0.281685E-2, 0.296264E-2, 
      0.310842E-2, 0.328926E-2 };
 
//  auto ssm = leapr( nout, title, ntempr, iprint, nphon, mat, za, awr, 
//      spr, npr, iel, ncold, nss, aws, nalpha, nbeta, lat, alpha, beta, 
//      temp_vec, delta, ni, rho, trans_weight, c, tbeta, nd, oscEnergies, 
//      oscWeights, nka, dka, kappaVals );
//  std::cout << ssm[0][0][0] << std::endl;
//  checkSab( ssmCorrect, ssm );

    } // WHEN
  } // GIVEN
  */

} // TEST CASE

